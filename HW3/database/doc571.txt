Cg or C for Graphics is a high level shading language created by NVIDIA to simplify vertex and fragment shader programming. Though it now supports geometry shaders as well.
Although Cg shares many syntactical similarities with C/C++, some features were modified to accommodate the inherent differences between CPU programming and GPU programming.
As a result of technical advancements in graphics cards, some areas of 3D graphics programming have become quite complex. To simplify the process, new features were added to graphics cards, including the ability to modify their rendering pipelines using vertex and pixel shaders (and more recently geometry shaders).
In the beginning, vertex and pixel shaders were programmed at a very low level with only the assembly language of the graphics processing unit. Although using the assembly language gave the programmer complete control over code and flexibility, it was fairly hard to use (just as with CPU assembly languages). A portable, higher level language for programming the GPU was needed, so Cg was created to overcome these problems and make shader development easier.
Some of the benefits of using Cg over assembly are:
High level code is easier to learn, program, read, and understand than assembly code.
Cg code is portable to a wide range of hardware and platforms, unlike assembly code, which usually depends on hardware and the platforms it's written for.
The Cg compiler can optimize code and do lower level tasks automatically, which are hard to do and error prone in assembly
Initially Cg was the only high level language for OpenGL programmers to program graphics hardware. With the arrival of GLSL on the scene and with HLSL being more popular on DirectX, it was thought that Cg would soon die. However, due to its "platform independent" nature, and with the upcoming Playstation 3 from Sony using Cg as the primary shading language, there has actually been an increasing trend towards using Cg in many engines. There are many reasons as listed below:
Cg shaders are more portable and many platforms are supported. Initially there were compatibility problems on many hardware (particularly from IHVs other than NVIDIA), but most seem to have been resolved now.
Cg has a syntax similar to HLSL (DirectX) and that makes porting Cg shaders to HLSL very easy. Sometimes Cg shaders can be compiled on DirectX without any modification.
Many games support multiple platforms and writing shaders in "native" shading languages can get extremely complicated, especially with engines providing many thousand built-in shaders. This is where Cg can come handy, providing the user with the "Write Once Run Everywhere" convenience. Information on whether Cg supports XBox-360 is not available.
