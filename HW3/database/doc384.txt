3D GAME SOFTWARE AND ARCHITECTURAL EDUCATION


Jules Moloney
School of Architecture
University of Auckland, New Zealand
j.moloney@auckland.ac.nz


Abstract

The use of computer technology to simulate architectural designs is well
established in the profession and education. However most software interfaces
in this field are intricate and require substantial time input, while the
hardware requirements to produce quality animations are continually
expanding. This software / hardware ¡®squeeze¡¯ can have a detrimental impact
in the educational context of the architectural design studios. Students start
with high expectations and rapidly become disillusioned at the time it takes to
transfer ideas to digital reality. Those who persist often produce seductive
computer graphics at the expense of design quality. This paper describes an
innovative architectural design course at the University of Auckland in which
computer game software was utilised as the design medium. The preliminary
outcomes indicate that this relatively inexpensive software may address the
above problems and in addition offer other learning opportunities.



Keywords

architecture, education, creativity, computer



Educational Context

Computers are used for a wide range of tasks in architectural education. These tend to relate to
course differentiation between technology and design which occurs in the majority of degrees.
Technology subjects use software to measure and test building performance - for example the
deflection of a beam or the lighting levels generated by lamps. This use of building science
software is relatively straightforward and is not the focus of this paper. By contrast the use of
computers to support the main activity of architectural degrees - design projects undertaken in
studios - is problematic. What follows is a description of the nature of the problem encountered at
the Auckland School of Architecture.
Auckland has established itself among the top design schools in Australasia with our students
frequently successful in prestigious international competitions. Reviews by accrediting agencies
often make comment on the excellence and innovation students demonstrate in drawing and model
making. In my view this is due to the emphasis placed by most design studios on the close
relationship between representation and the development of design ideas. The ¡°mark - interpret -
mark cycle¡± articulated by Daniel Herbert in relation to sketching has been extended within our
design studios to the production of innovative composite drawings and malleable physical models
(Herbert, 1993). While not a certainty our experience has shown that innovative representation
generally produces innovative and sophisticated architectural projects. These observations are
reinforced by the work of theorist Robin Evans who in ¡°The Projective Cast¡± traces the
relationship between projective geometry and the generation of architectural form (Evans, 1995).
In this work he proposes that the historical development of architecture has been limited by the
ability to describe form on paper, and hence related to the drafting tools and techniques available at
any given period.
Evans¡¯ historical perspective has been used by the author to propose alternate strategies facilitated
or made possible by the use of digital technology (Moloney, 2000). These were categorised as
emergent form (using generative techniques such as cellular automata, shape grammar or genetic
algorithms), immersive editing (the editing of architecture within virtual environments) and
computer aided construction (the automated construction of architecture using CNC machines).
These three strategies are to my mind the advantages of computing for design. While the first
involves computer programming beyond the curriculum of most schools and the later requires
specialised and expensive machines, the facility to evaluate and alter architectural design -
immersive editing - is within the resources of typical architecture schools.
As the principle lecturer responsible for computing my goal was to encourage the use of immersive
editing to aid student design projects. The first step was to move the computers out of the
computer lab and into the design studio. A relatively simple and logical move once nervous
technicians and academic staff were persuaded of the need to integrate computers with other forms
of representation in the design studios. A major hurdle however was the drawing culture which
pervaded the school at the time. Freehand sketching is an activity that in the twentieth century has
acquired mythical status for Architecture. After Le Corbusier the sketch is seen as a ¡®divine¡¯
moment of creation marking the spontaneous birth of the architecture, a mysterious ability that
some have and some do not. Hence the ¡®table napkin¡¯ doodles (pre or post natal) which inevitably
accompany the documentation of an architectural project. In this culture of drawing excellence the
use of computers tended to attract students who were more interested in mastering every last
software command than using the computer to develop their design projects. Three or four years
ago the hunched figure of the ¡®computer geek¡¯ loomed large in both staff and student perception.
Today the position is to some extent reversed. Our most talented students put in the long hours of
interface pain and hardware time to generate work that has gained international recognition.
However while computers are now associated with design excellence they still form a marginal
percentage of student projects. Most students are discouraged by the time and effort required in the
production of refined projects.
In discussion with students the most traumatic experience was the long anxious wait for hardware
to produce renders only to find either design mistakes or technical errors such as lighting have
ruined their work. The time lag between computer ¡®mark¡¯ and interpretation hindered the creative
process and in the worst cases resulted in sub standard work. The obvious answer is to work in real
time - so called virtual reality ? rather than evaluate designs via rendered animations. Indeed the
concept of immersive editing was proposed on the assumption of a real time editing environment.
Unfortunately virtual reality software and the hardware requirements are still beyond the resources
of most undergraduate degrees.



Game Software

Computer game developers have huge resources to bring to their research and development and as
a consequence their products offer performance that rivals commercial virtual reality software - at
a fraction of the price. Recently several games have offered ¡®level¡¯ editing - users can design their
own scenes for the game play to unfold. It was now possible to design architecture using game
software. After evaluating options we decided to use ¡®Worldcraft Toolkit¡¯ which is used to generate
3D scenes for the games ¡®Half Life¡¯ and ¡®Counter Strike¡¯. A major advantage of ¡®Worldcraft¡¯ is that
the modelling navigation is identical to the game navigation interface. Hence new design ideas can
be instantly evaluated, edited and refined with fluency. It was anticipated that this would encourage
experimentation and design modification throughout the design process. In order to test this
proposition a design project was proposed for a summer design elective undertaken in January 2001.
The project was structured in two parts. A preliminary project required students to select an unbuilt
work from a list of master architects and construct an accurate 3D model. The primary objective of
this short project was to gain software fluency without the pressure of design. Another objective
was to gain an insight into the work of their chosen architect and hence provide a precedent or
referent for the next project. In this second design task students were required to produce an
architectural proposal which referred to the previous model. The analogy of ¡®cousins¡¯ was
presented for individual interpretation. Students were encouraged to exploit the game software to
push the boundaries of architecture - the project did not necessarily have to be ¡®buildable¡¯ but
should propose ideas and possibilities for architecture.



Outcomes

Design Iterations

In this first trial the anticipated benefits were achieved. Once students realised they could alter
their projects and instantly examine the 3D consequences from any point of view, most produced a
series of ideas which were discussed in tutorials. Students were encouraged to make file copies as
they advanced these designs to provide a record of these iterations. The range and scope of
iterations differed from student to student in a similar manner to non-computer based design
projects. Research on creativity in architectural design has indicated a relationship between
creative ability and the range and number of design permutations - the more creative solutions
generally come from students who are prepared to critically examine a large number of iterations
(Schoon, 1992). Hence the importance of using software which encourages immersive editing.
As well as these anticipated benefits the use of the software resulted in other outcomes of potential
importance to the use of computers for architectural design education.

The Critique

Student projects culminate in a formal critique by invited critics who have not seen the work. In
previous projects we have undertaken students would present with a combination of hardcopy
prints and screen animations. The experience of the game critique was radically different. As ¡®Half
Life¡¯ is a multi player game environment the critics manipulated avatars to follow the student
around and engage within the architecture. Hence the critics were invited to experience the
architectural proposal in a participatory manner as opposed to passive viewing and listening. This
enlivened the whole process, relaxing the student and critic and encouraged conversations about
aspects of the work to evolve. The process was one of mutual discovery, breaking down the normal
power structure of architectural critiques - students standing in front of seated critics and
endeavouring to ¡®sell¡¯ their project. This was of particular advantage to some ¡®English as a Second
Language¡¯ students.

Design Emphasis

The tools available within the gaming environment affected the emphasis of the student designs.
These included experimentation with surface qualities to produce in the best cases extremely
seductive light and opacity effects. (Our visiting professional critic left inspired to seek out real
world materials that would achieve these effects). Other students experimented with differential
gravitational fields that challenged the position of the ¡®occupant¡¯. Some inserted hidden triggers to
animate walls dependent on proximity. ¡®Teleports¡¯ were embedded to transfer the occupant to other
parts of the building, while others engendered a sense of danger via traps or breaking building
parts. In one instance the student declared to the critics that her work could only be appreciated by
continually running through the project as opposed to analysis from a fixed viewpoint. In
summary, the above student experiments facilitated by the game software resulted in an emphasis
on the experiential attributes of the architectural proposals. Students could simulate the sensual
experience of design occupation as opposed to traditional evaluation through architectural codes of
plan, elevation and section.



Further Work

This first experimentation indicates there are potential advantages in the use of game software. In
particular the immediacy of the interface and the low hardware requirements address problems
encountered with professional software typically used in architectural schools. Further work needs
to be undertaken to explore the full potential of the software. In the next stage of this teaching
experiment it is proposed to use the software to facilitate virtual design studios in which student
and tutor can inhabit work in progress via the internet. We also see the possibility for collaboration
with computer science departments to reprogram the game plot to provide a more educational
focus to the game narrative.



References

Evans, R. (1995). The Projective Cast. Cambridge, Mass: MIT Press.
Herbert, D. (1993). Architectural Study Drawing. New York: Van Nostrand Reinhold.
Moloney, J. (2000). Collapsing the Tetrahedron: Architecture Within Digital Machines. In Tanya
Szrajber (Ed.), Computers and History of Art Conference Proceedings (Vol 2., pp 289 - 294)
Glasgow: University of Glasgow, 24-25 September.
Schoon, I. (1992). Creative Achievement in Architecture: A Psychological Study. Leiden: DSWO
Press.
Copyright ¨Ï 2001 Jules Moloney.
The author assign to ASCILITE and educational non profit institutions a non-exclusive license to use this
document for personal use and in courses of instruction provided that the article is used in full and this copyright
statement is reproduced. The author also grant a non-exclusive license to ASCILITE to publish this article in full
on the World Wide Web (prime site and mirrors) and in printed form from within the ASCILITE 2001 conference
proceedings. Any other usage is prohibited without the express permission of the author.
~ 124 ~
Meeting at the Crossroads